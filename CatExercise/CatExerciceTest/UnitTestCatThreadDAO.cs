using System;
using System.Text;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using CatExercise.Dao;
using CatExercise.Models;
using CodeFirstCat;

namespace CatExerciceTest
{
    [TestClass]
    public class UnitTestCatThreadDAO
    {
        [TestMethod]
        public void FactoryTest()
        {
            ICatThreadDAO dao = DAOFactory.getInstanceOfCatThread();
            Assert.IsNotNull(dao);
        }

        [TestMethod]
        public void AtLeastOneAtStartTest()
        {
            ICatThreadDAO dao = DAOFactory.getInstanceOfCatThread();
            int count = dao.GetAll().Count;
            Assert.IsTrue(count > 0);
        }

        [TestMethod]
        public void InsertBadThreadTest()
        {
            ICatThreadDAO dao = DAOFactory.getInstanceOfCatThread();
            int count1 = dao.GetAll().Count;
            int idresult = dao.Insert(new CatThreadView());
            int count2 = dao.GetAll().Count;
            Assert.IsTrue(count1 == count2);
            Assert.AreEqual(idresult, 0);
        }

        private CatThreadView CreateDummyCatThreadView(string titre, string uri, int userid)
        {
            return new CatThreadView()
            {
                Titre = titre,
                UserID = userid,
                UriPhoto = uri
            };
        }

        [TestMethod]
        public void CheckThereIsAUserNumberOne()
        {
            IUserDAO userdao = DAOFactory.getInstanceOfUser();
            Assert.IsNotNull(userdao.FindByID(1));
        }

        [TestMethod]
        public void CatThreadIDAutoGeneratedAfterInsert()
        {
            ICatThreadDAO dao = DAOFactory.getInstanceOfCatThread();
            int id = dao.Insert(CreateDummyCatThreadView("", "", 1));
            Assert.AreNotEqual(id, 0);
        }


        [TestMethod]
        public void CatThreadInsertedAndIdRecoverable()
        {
            ICatThreadDAO dao = DAOFactory.getInstanceOfCatThread();

            string titre = "testtest_Titre" + new Random().Next().ToString();
            int id = dao.Insert(CreateDummyCatThreadView(titre, "", 1));
            CatThreadView miaouView = dao.FindByID(id);
            Assert.IsNotNull(miaouView);
        }


        [TestMethod]
        public void CatThreadInsertedAndTitleRecoverable()
        {
            ICatThreadDAO dao = DAOFactory.getInstanceOfCatThread();

            string titre = "testtest_Titre" + new Random().Next().ToString();
            int id = dao.Insert(CreateDummyCatThreadView(titre, "", 1));
            CatThreadView miaouView = dao.FindByID(id);
            Assert.AreEqual(miaouView.Titre, titre);
        }

        //[TestMethod]
        //public void ActiveOptionTest()
        //{
            
        //}

        [TestMethod]
        public void GetThreadFromInexistingUserTest()
        {
            ICatThreadDAO dao = DAOFactory.getInstanceOfCatThread();
            Assert.AreEqual(dao.FindByLogin("inexisting login").Count, 0);
        }

        [TestMethod]
        public void FindByTitleTest()
        {
            ICatThreadDAO dao = DAOFactory.getInstanceOfCatThread();
            Assert.AreEqual(dao.FindByTitle(null).Count, 0);
        }
    }
}
